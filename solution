# grader-required-cell
import tensorflow as tf
import numpy as np
from tensorflow import keras 
# GRADED FUNCTION: house_model
def house_model():
    ### START CODE HERE
    
    # Define input and output tensors with the values for houses with 1 up to 6 bedrooms
    # Hint: Remember to explictly set the dtype as float
    

    
    # Define your model (should be a model with 1 dense layer and 1 unit)
    model = keras.Sequential([keras.layers.Dense(units=1,input_shape=[1])])
    
    # Compile your model
    # Set the optimizer to Stochastic Gradient Descent
    # and use Mean Squared Error as the loss function
    model.compile(optimizer='sgd', loss='mean_squared_error')
    
    xs = np.array([1.0,2.0,3.0,4.0,5.0,10.0],dtype=float)
    ys = np.array([1.0,1.5,2.0,2.5,3.0,5.5],dtype=float)
    
    # Train your model for 1000 epochs by feeding the i/o tensors
    model.fit(xs,ys, epochs=1000)
    
    ### END CODE HERE
    return model
